{"version":3,"sources":["Components/Form.js","Components/Display.js","Components/Navbar.js","App.js","index.js"],"names":["Form","className","type","value","this","props","username","onChange","event","onHandle","Component","Display","someError","userProfile","login","name","company","html_url","public_repos","avatar_url","undefined","userInput","src","alt","width","height","href","Navbar","App","state","target","setState","fetchUser","fetch","headers","process","then","response","console","log","status","json","catch","error","Fragment","getUserInput","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLA0BeA,E,uKApBA,IAAD,OAEN,OACI,yBAAKC,UAAY,WACb,8BACI,2BAAOA,UAAY,wDAAnB,mBACI,2BAAOA,UAAY,uBACfC,KAAO,OACPC,MAASC,KAAKC,MAAMC,SACpBC,SAAY,SAACC,GACT,EAAKH,MAAMI,SAASD,a,GAbjCE,aCmCJC,E,uKAjCA,IACCC,EAAcR,KAAKC,MAAnBO,UADF,EAE+DR,KAAKC,MAAMQ,YAAxEC,EAFF,EAEEA,MAAOC,EAFT,EAESA,KAAMC,EAFf,EAEeA,QAASC,EAFxB,EAEwBA,SAAUC,EAFlC,EAEkCA,aAAcC,EAFhD,EAEgDA,WAEtD,OAAIP,EAEI,yBAAKX,UAAY,kBACZ,4GAICmB,IAAVN,EAEI,yBAAKb,UAAY,kBACb,2BAAIG,KAAKC,MAAMgB,WACf,yBAAKC,IAAOH,EAAYI,IAAM,SAASC,MAAQ,MAAMC,OAAS,QAC9D,gCAAMX,EAAN,KACA,gCAAMC,EAAN,KACA,gCAAMC,EAAN,KACA,gCAAME,EAAN,KACA,uBAAGQ,KAAQT,EAAUhB,UAAY,qBAAjC,iBAMJ,kC,GA5BMS,aCUPiB,E,uKANP,OACI,4BAAQ1B,UAAY,2CAApB,iC,GALSS,aCwDNkB,E,4MApDbC,MAAQ,CACNvB,SAAU,GACVO,YAAa,GACbD,WAAW,G,2DAGAJ,GACX,IAAIa,EAAYb,EAAMsB,OAAO3B,MAC7BC,KAAK2B,SAAS,CAACzB,SAAUe,IACzBjB,KAAK4B,c,kCAGM,IAAD,OACVC,MAAM,gCAAD,OAAiC7B,KAAKyB,MAAMvB,UAAY,CAC3D4B,QAAS,CACP,cAAgB,SAAhB,OAA0BC,+CAG5BC,MAAM,SAACC,GAKJ,OAJAC,QAAQC,IAAIF,EAASG,QACI,MAApBH,EAASG,QAAsC,MAApBH,EAASG,QAAsC,MAApBH,EAASG,QACjE,EAAKT,SAAS,CAACnB,WAAW,IAEtByB,EAASI,UAElBL,MAAM,SAACvB,GACJ,EAAKkB,SAAS,CAAClB,YAAaA,OAE/B6B,OAAO,SAACC,GACPL,QAAQC,IAAII,Q,+BAIP,IAAD,OACR,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACF,yBAAK3C,UAAY,eAChB,kBAAC,EAAD,CAAMQ,SAAY,SAACD,GACjB,EAAKqC,aAAcrC,IAElBF,SAAYF,KAAKyB,MAAMvB,WACzB,kBAAC,EAAD,CAASe,UAAajB,KAAKyB,MAAMvB,SAC/BO,YAAeT,KAAKyB,MAAMhB,YAC1BD,UAAaR,KAAKyB,MAAMjB,kB,GA9ChBkC,IAAMpC,WCAxBqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ae9b118e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Form extends Component {\n\n    \n    render () {\n\n        return (\n            <div className = 'bg-info'>\n                <form>\n                    <label className = 'text-white font-weight-bold form-group m-5 container'> Enter Username:\n                        <input className = 'form-control p-4 m-2' \n                            type = 'text' \n                            value = {this.props.username} \n                            onChange = {(event) => {\n                                this.props.onHandle(event);\n                            }}>\n                        </input>\n                    </label>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Form;","import React, { Component } from 'react';\n\n\nclass Display extends Component {\n\n    render () {\n        const { someError } = this.props;\n        const { login, name, company, html_url, public_repos, avatar_url } = this.props.userProfile;\n\n        if (someError) {\n            return (\n                <div className = 'container mt-3'>\n                     <p>Sorry, Either This User Does Not Exist Or You've Ran Out Of Requests...</p>\n                </div>\n            )\n        }\n        if (login !== undefined) {\n            return (\n                <div className = 'container mt-3'>\n                    <p>{this.props.userInput}</p>\n                    <img src = {avatar_url} alt = 'Avatar' width = '150' height = '150' />\n                    <h4> {login} </h4>\n                    <h4> {name} </h4>\n                    <h4> {company} </h4>\n                    <h4> {public_repos} </h4>\n                    <a href = {html_url} className = 'btn btn-secondary'>View Profile</a>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div></div>\n            )\n        }\n        \n    }\n}\n\nexport default Display;","import React, { Component } from 'react'; \n\n\nclass Navbar extends Component {\n\n    render() {\n\n        return (\n            <header className = 'bg-dark text-white p-3 font-weight-bold'> Github Users Lookup API </header>\n        )\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport Form from './Components/Form';\nimport Display from './Components/Display';\nimport Navbar from './Components/Navbar';\n\nclass App extends React.Component {\n\n  state = {\n    username: '',\n    userProfile: '',\n    someError: false\n  }\n\n  getUserInput(event) {\n    let userInput = event.target.value;\n    this.setState({username: userInput});\n    this.fetchUser();\n}\n \n  fetchUser() {\n    fetch(`https://api.github.com/users/${this.state.username}`, {\n      headers: {\n        'Authorization': `Token ${process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN}`\n      }\n    })\n     .then( (response) => {\n         console.log(response.status);\n          if (response.status === 404 || response.status === 401 || response.status === 403) {\n            this.setState({someError: true})\n          }\n         return response.json();\n     })\n      .then( (userProfile) => {\n          this.setState({userProfile: userProfile})\n      })\n      .catch( (error) => {\n        console.log(error);\n      })\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        <Navbar />\n      <div className = 'text-center'>\n       <Form onHandle = {(event) => {\n         this.getUserInput (event) \n        }}\n          username = {this.state.username} />\n        <Display userInput = {this.state.username} \n          userProfile = {this.state.userProfile} \n          someError = {this.state.someError} />\n      </div>\n      </React.Fragment>\n     );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}